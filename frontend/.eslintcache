[{"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\index.js":"1","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\App.js":"2","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reportWebVitals.js":"3","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\store.js":"4","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\RestaurantFoodScreen.js":"5","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Footer.js":"6","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Header.js":"7","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\RestaurantDetailsScreen.js":"8","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\HomeScreen.js":"9","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\LoginScreen.js":"10","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\FoodDetailsScreen.js":"11","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\SignupScreen.js":"12","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\CartScreen.js":"13","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\ProfileScreen.js":"14","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\userReducers.js":"15","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\restaurantReducers.js":"16","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\foodReducers.js":"17","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\cartReducers.js":"18","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Food.js":"19","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\userActions.js":"20","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Message.js":"21","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Loader.js":"22","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Rating.js":"23","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Search.js":"24","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Restaurant.js":"25","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\UserOrders.js":"26","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\foodActions.js":"27","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\restaurantActions.js":"28","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\orderActions.js":"29","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\cartActions.js":"30","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\cartConstants.js":"31","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\restaurantConstants.js":"32","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\foodConstants.js":"33","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\userConstants.js":"34","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\orderConstants.js":"35","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\orderReducers.js":"36","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\CheckoutScreen.js":"37","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\OrderScreen.js":"38","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\UsersListScreen.js":"39"},{"size":607,"mtime":1619702319851,"results":"40","hashOfConfig":"41"},{"size":1833,"mtime":1620595483411,"results":"42","hashOfConfig":"41"},{"size":375,"mtime":1619702319855,"results":"43","hashOfConfig":"41"},{"size":2002,"mtime":1620594805234,"results":"44","hashOfConfig":"41"},{"size":1028,"mtime":1619702319862,"results":"45","hashOfConfig":"41"},{"size":134,"mtime":1619702319841,"results":"46","hashOfConfig":"41"},{"size":4580,"mtime":1620596056562,"results":"47","hashOfConfig":"41"},{"size":2976,"mtime":1619881681439,"results":"48","hashOfConfig":"41"},{"size":3237,"mtime":1619702319859,"results":"49","hashOfConfig":"41"},{"size":2848,"mtime":1619702319859,"results":"50","hashOfConfig":"41"},{"size":3833,"mtime":1619902897960,"results":"51","hashOfConfig":"41"},{"size":3890,"mtime":1619702319862,"results":"52","hashOfConfig":"41"},{"size":3727,"mtime":1619880947286,"results":"53","hashOfConfig":"41"},{"size":4002,"mtime":1619958940383,"results":"54","hashOfConfig":"41"},{"size":2981,"mtime":1620593288851,"results":"55","hashOfConfig":"41"},{"size":1479,"mtime":1619702319854,"results":"56","hashOfConfig":"41"},{"size":1076,"mtime":1619702319852,"results":"57","hashOfConfig":"41"},{"size":1094,"mtime":1619706413122,"results":"58","hashOfConfig":"41"},{"size":897,"mtime":1619903162546,"results":"59","hashOfConfig":"41"},{"size":4630,"mtime":1620596918448,"results":"60","hashOfConfig":"41"},{"size":311,"mtime":1619709760476,"results":"61","hashOfConfig":"41"},{"size":402,"mtime":1619702319842,"results":"62","hashOfConfig":"41"},{"size":1598,"mtime":1619702319843,"results":"63","hashOfConfig":"41"},{"size":1074,"mtime":1619702319845,"results":"64","hashOfConfig":"41"},{"size":872,"mtime":1619702319844,"results":"65","hashOfConfig":"41"},{"size":2698,"mtime":1619961791832,"results":"66","hashOfConfig":"41"},{"size":1446,"mtime":1619702319831,"results":"67","hashOfConfig":"41"},{"size":1259,"mtime":1619702319833,"results":"68","hashOfConfig":"41"},{"size":2319,"mtime":1619959617503,"results":"69","hashOfConfig":"41"},{"size":1059,"mtime":1619707938693,"results":"70","hashOfConfig":"41"},{"size":170,"mtime":1619705503733,"results":"71","hashOfConfig":"41"},{"size":466,"mtime":1619702319849,"results":"72","hashOfConfig":"41"},{"size":398,"mtime":1619702319847,"results":"73","hashOfConfig":"41"},{"size":1026,"mtime":1620593217995,"results":"74","hashOfConfig":"41"},{"size":520,"mtime":1619958186120,"results":"75","hashOfConfig":"41"},{"size":1812,"mtime":1619958919228,"results":"76","hashOfConfig":"41"},{"size":5098,"mtime":1619901850485,"results":"77","hashOfConfig":"41"},{"size":4191,"mtime":1619960293606,"results":"78","hashOfConfig":"41"},{"size":2660,"mtime":1620596958055,"results":"79","hashOfConfig":"41"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},"1gibtsu",{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"82"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"82"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"111","usedDeprecatedRules":"82"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"132","messages":"133","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"134","messages":"135","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"136","usedDeprecatedRules":"82"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"82"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"161","usedDeprecatedRules":"82"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\index.js",[],["164","165"],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\App.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reportWebVitals.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\store.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\RestaurantFoodScreen.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Footer.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Header.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\RestaurantDetailsScreen.js",["166"],"import React, { useEffect } from \"react\"\r\nimport { Row, Col, Image, ListGroup, Card, Button } from \"react-bootstrap\"\r\nimport { LinkContainer } from \"react-router-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { restaurantDetails } from \"../actions/restaurantActions\"\r\nimport Rating from \"../components/Rating\"\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\n\r\nfunction RestaurantDetails({ match, history }) {\r\n  const dispatch = useDispatch()\r\n  const { loading, error, restaurant } = useSelector(\r\n    (state) => state.restaurantDetails\r\n  )\r\n  useEffect(() => {\r\n    dispatch(restaurantDetails(match.params.id))\r\n  }, [dispatch, match.params.id])\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" text={error} />\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image\r\n                src={restaurant.picture}\r\n                alt={restaurant.name}\r\n                fluid\r\n                rounded\r\n              />\r\n              <br />\r\n              <Button\r\n                className=\"btn brn-dark  my-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{restaurant.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={restaurant.rating}\r\n                    text={`${restaurant.numReviews} avis`}\r\n                  ></Rating>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>Description: </strong> {restaurant.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <strong>Ville: </strong> {restaurant.ville}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <strong>Adresse: </strong> {restaurant.address}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <strong>Téléphone: </strong> {restaurant.phone}\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <LinkContainer to={`/restaurant/${restaurant._id}/food`}>\r\n                      <Button type=\"button\" className=\"btn-block\">\r\n                        See Menu\r\n                      </Button>\r\n                    </LinkContainer>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default RestaurantDetails\r\n","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\HomeScreen.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\LoginScreen.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\FoodDetailsScreen.js",["167"],"import React, { useEffect, useState } from \"react\"\r\nimport { Row, Col, Image, ListGroup, Card, Button, Form } from \"react-bootstrap\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { foodDetails } from \"../actions/foodActions\"\r\nimport Rating from \"../components/Rating\"\r\nimport Loader from \"../components/Loader\"\r\nimport Message from \"../components/Message\"\r\n\r\nfunction FoodDetailsScreen({ match, history }) {\r\n  const [quantity, setQuantity] = useState(0)\r\n  const dispatch = useDispatch()\r\n  const { loading, error, food } = useSelector((state) => state.foodDetails)\r\n\r\n  useEffect(() => {\r\n    dispatch(foodDetails(match.params.id))\r\n  }, [dispatch, match.params.id])\r\n\r\n  const addToCartHandler = () => {\r\n    history.push(`/cart/${match.params.id}?qty=${quantity}`)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : error ? (\r\n        <Message variant=\"danger\" text={error} />\r\n      ) : (\r\n        <>\r\n          <Row>\r\n            <Col md={6}>\r\n              <Image\r\n                src={`/images/${food.image}`}\r\n                alt={food.name}\r\n                fluid\r\n                rounded\r\n              />\r\n              <br />\r\n              <Button\r\n                className=\"btn brn-dark  my-3\"\r\n                onClick={() => history.goBack()}\r\n              >\r\n                Back\r\n              </Button>\r\n            </Col>\r\n            <Col md={3}>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h3>{food.name}</h3>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Rating\r\n                    value={food.rating}\r\n                    text={`${food.numReviews} avis`}\r\n                  ></Rating>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <strong>Description: </strong> {food.description}\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Col>\r\n            <Col md={3}>\r\n              <Card>\r\n                <ListGroup variant=\"flush\">\r\n                  <ListGroup.Item>\r\n                    <strong>Prix: </strong> {food.price} DH\r\n                  </ListGroup.Item>\r\n                  {/* <ListGroup.Item>\r\n                    <strong>Restaurant: </strong> {food.restaurant._id}\r\n                  </ListGroup.Item> */}\r\n                  {/* <ListGroup.Item>\r\n                    <strong>Categorie: </strong> {food.category}\r\n                  </ListGroup.Item> */}\r\n                  <ListGroup.Item>\r\n                    <Row>\r\n                      <Col>\r\n                        <strong>Quantity : </strong>\r\n                      </Col>\r\n                      <Col>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          value={quantity}\r\n                          onChange={(e) => setQuantity(e.target.value)}\r\n                        >\r\n                          {[...Array(10).keys()].map((x) => (\r\n                            <option key={x + 1} value={x + 1}>\r\n                              {x + 1}\r\n                            </option>\r\n                          ))}\r\n                        </Form.Control>\r\n                      </Col>\r\n                    </Row>\r\n                  </ListGroup.Item>\r\n                  <ListGroup.Item>\r\n                    <Button\r\n                      type=\"button\"\r\n                      className=\"btn-block\"\r\n                      onClick={addToCartHandler}\r\n                    >\r\n                      Add To Cart\r\n                    </Button>\r\n                  </ListGroup.Item>\r\n                </ListGroup>\r\n              </Card>\r\n            </Col>\r\n          </Row>\r\n        </>\r\n      )}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default FoodDetailsScreen\r\n","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\SignupScreen.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\CartScreen.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\ProfileScreen.js",["168"],"import React, { useState, useEffect } from \"react\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Row, Col, Card, Form, Button, Alert } from \"react-bootstrap\"\r\nimport { getUserDetails, updateUserProfile } from \"../actions/userActions\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport UserOrders from \"../components/UserOrders\"\r\n\r\nfunction RegisterScreen({ history }) {\r\n  const [name, setName] = useState(\"\")\r\n  const [email, setEmail] = useState(\"\")\r\n  const [password, setPassword] = useState(\"\")\r\n  const [confirmPassword, setConfirmPassword] = useState(\"\")\r\n  const [passwordsNotMatch, setPasswordsNotMatch] = useState(null)\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, error, user } = useSelector((state) => state.userDetails)\r\n\r\n  const { success } = useSelector((state) => state.userUpdateProfile)\r\n\r\n  //to check if the us*er is logged in or not\r\n  const { userInfo } = useSelector((state) => state.userLogin)\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\")\r\n    } else {\r\n      if (!user.name) {\r\n        dispatch(getUserDetails(\"profile\"))\r\n      } else {\r\n        setName(user.name)\r\n        setEmail(user.email)\r\n      }\r\n    }\r\n  }, [dispatch, history, userInfo, user])\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    if (password !== confirmPassword) {\r\n      setPasswordsNotMatch(\"Passwords Not Match!\")\r\n    } else {\r\n      let role = \"client\"\r\n      dispatch(\r\n        updateUserProfile({\r\n          id: user._id,\r\n          name,\r\n          email,\r\n          password,\r\n          role,\r\n        })\r\n      )\r\n    }\r\n  }\r\n\r\n  return (\r\n    <Row>\r\n      <Col md={4}>\r\n        <Card className=\"p-3\">\r\n          {error && <Message variant=\"danger\" text={error} />}\r\n          {success && <Message variant=\"success\" text=\"Updated with success\" />}\r\n          {passwordsNotMatch && (\r\n            <Message variant=\"danger\" text={passwordsNotMatch} />\r\n          )}\r\n          {loading && <Loader />}\r\n          <Card.Title>\r\n            <h3>My Profile</h3>\r\n          </Card.Title>\r\n          <Card.Body>\r\n            <Form onSubmit={handleSubmit}>\r\n              <Form.Group controlId=\"name\">\r\n                <Form.Label>Name</Form.Label>\r\n                <Form.Control\r\n                  type=\"text\"\r\n                  placeholder=\"Enter your name\"\r\n                  value={name}\r\n                  onChange={(e) => setName(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"email\">\r\n                <Form.Label>Email</Form.Label>\r\n                <Form.Control\r\n                  type=\"email\"\r\n                  placeholder=\"Enter your email\"\r\n                  value={email}\r\n                  onChange={(e) => setEmail(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"password\">\r\n                <Form.Label>Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Enter your password\"\r\n                  value={password}\r\n                  onChange={(e) => setPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Form.Group controlId=\"confirmPassword\">\r\n                <Form.Label>Confirm Password</Form.Label>\r\n                <Form.Control\r\n                  type=\"password\"\r\n                  placeholder=\"Confirm your password\"\r\n                  value={confirmPassword}\r\n                  onChange={(e) => setConfirmPassword(e.target.value)}\r\n                ></Form.Control>\r\n              </Form.Group>\r\n              <Button type=\"submit\" variant=\"primary\" block>\r\n                Update\r\n              </Button>\r\n            </Form>\r\n          </Card.Body>\r\n        </Card>\r\n      </Col>\r\n      <Col md={8}>\r\n        <UserOrders />\r\n      </Col>\r\n    </Row>\r\n  )\r\n}\r\n\r\nexport default RegisterScreen\r\n","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\userReducers.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\restaurantReducers.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\foodReducers.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\cartReducers.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Food.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\userActions.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Message.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Loader.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Rating.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Search.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\Restaurant.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\components\\UserOrders.js",["169"],"import React, { useEffect } from \"react\"\r\nimport { Card, Col, Image, ListGroup, Row } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { getUserOrders } from \"../actions/orderActions\"\r\nimport Loader from \"./Loader\"\r\nimport Message from \"./Message\"\r\n\r\nfunction UserOrders() {\r\n  const dispatch = useDispatch()\r\n\r\n  const { loading, error, orders } = useSelector((state) => state.userOrders)\r\n\r\n  useEffect(() => {\r\n    dispatch(getUserOrders())\r\n    console.log(orders)\r\n  }, [dispatch])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\" text={error} />\r\n  ) : (\r\n    <>\r\n      <h3>My Orders </h3>\r\n      {orders.map((order) => {\r\n        return (\r\n          <Card>\r\n            <Card.Header>\r\n              <h3>Order {order._id}</h3>\r\n            </Card.Header>\r\n            <Card.Body>\r\n              <Row>\r\n                <Col md={12}>\r\n                  <ListGroup variant=\"flush\">\r\n                    <ListGroup.Item>\r\n                      <h4>Order Items</h4>\r\n                      {order.orderItems.length === 0 ? (\r\n                        <Message>Order is empty</Message>\r\n                      ) : (\r\n                        <ListGroup variant=\"flush\">\r\n                          {order.orderItems.map((item, index) => (\r\n                            <ListGroup.Item key={index}>\r\n                              <Row>\r\n                                <Col md={4}>\r\n                                  <Image\r\n                                    src={`/images/${item.image}`}\r\n                                    alt={item.name}\r\n                                    fluid\r\n                                    rounded\r\n                                  />\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                  <Link to={`/foods/${item.food}`}>\r\n                                    {item.name}\r\n                                  </Link>\r\n                                </Col>\r\n                                <Col md={4}>\r\n                                  {item.qty} x {item.price} DH ={\" \"}\r\n                                  {item.qty * item.price} DH\r\n                                </Col>\r\n                              </Row>\r\n                            </ListGroup.Item>\r\n                          ))}\r\n                        </ListGroup>\r\n                      )}\r\n                    </ListGroup.Item>\r\n                  </ListGroup>\r\n                </Col>\r\n              </Row>\r\n            </Card.Body>\r\n          </Card>\r\n        )\r\n      })}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default UserOrders\r\n","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\foodActions.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\restaurantActions.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\orderActions.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\actions\\cartActions.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\cartConstants.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\restaurantConstants.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\foodConstants.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\userConstants.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\constants\\orderConstants.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\reducers\\orderReducers.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\CheckoutScreen.js",[],"C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\OrderScreen.js",["170","171"],"import React, { useEffect } from \"react\"\r\nimport { Link } from \"react-router-dom\"\r\nimport { Row, Col, ListGroup, Image, Card, Button } from \"react-bootstrap\"\r\nimport { useDispatch, useSelector } from \"react-redux\"\r\nimport Message from \"../components/Message\"\r\nimport Loader from \"../components/Loader\"\r\nimport { getOrderDetail } from \"../actions/orderActions\"\r\n\r\nconst OrderScreen = ({ match, history }) => {\r\n  const orderId = match.params.id\r\n\r\n  const dispatch = useDispatch()\r\n\r\n  const orderDetail = useSelector((state) => state.orderDetail)\r\n  const { order, loading, error } = orderDetail\r\n\r\n  const userLogin = useSelector((state) => state.userLogin)\r\n\r\n  const { userInfo } = userLogin\r\n\r\n  useEffect(() => {\r\n    if (!userInfo) {\r\n      history.push(\"/login\")\r\n    }\r\n\r\n    dispatch(getOrderDetail(orderId))\r\n  }, [])\r\n\r\n  return loading ? (\r\n    <Loader />\r\n  ) : error ? (\r\n    <Message variant=\"danger\">{error}</Message>\r\n  ) : (\r\n    <Card>\r\n      <Card.Header>\r\n        <h1>Order {order._id}</h1>\r\n      </Card.Header>\r\n      <Card.Body>\r\n        <Row>\r\n          <Col md={8}>\r\n            <ListGroup variant=\"flush\">\r\n              <ListGroup.Item>\r\n                <h2>Shipping</h2>\r\n                <p>\r\n                  <strong>Name: </strong> {order.user.name}\r\n                </p>\r\n                <p>\r\n                  <strong>Email: </strong>{\" \"}\r\n                  <a href={`mailto:${order.user.email}`}>{order.user.email}</a>\r\n                </p>\r\n                <p>\r\n                  <strong>Address:</strong>\r\n                  {order.shippingAddress.address}, {order.shippingAddress.city}{\" \"}\r\n                </p>\r\n                <p>\r\n                  <strong>Phone:</strong>\r\n                  {order.phoneNumber}\r\n                </p>\r\n                {order.isDelivered ? (\r\n                  <Message\r\n                    variant=\"success\"\r\n                    text={`Delivered on ${order.deliveredAt}`}\r\n                  />\r\n                ) : (\r\n                  <Message variant=\"danger\" text=\"Not Delivered Yet\" />\r\n                )}\r\n              </ListGroup.Item>\r\n\r\n              <ListGroup.Item>\r\n                <h2>Order Items</h2>\r\n                {order.orderItems.length === 0 ? (\r\n                  <Message>Order is empty</Message>\r\n                ) : (\r\n                  <ListGroup variant=\"flush\">\r\n                    {order.orderItems.map((item, index) => (\r\n                      <ListGroup.Item key={index}>\r\n                        <Row>\r\n                          <Col md={1}>\r\n                            <Image\r\n                              src={`/images/${item.image}`}\r\n                              alt={item.name}\r\n                              fluid\r\n                              rounded\r\n                            />\r\n                          </Col>\r\n                          <Col>\r\n                            <Link to={`/foods/${item.food}`}>{item.name}</Link>\r\n                          </Col>\r\n                          <Col md={4}>\r\n                            {item.qty} x {item.price} DH ={\" \"}\r\n                            {item.qty * item.price} DH\r\n                          </Col>\r\n                        </Row>\r\n                      </ListGroup.Item>\r\n                    ))}\r\n                  </ListGroup>\r\n                )}\r\n              </ListGroup.Item>\r\n            </ListGroup>\r\n          </Col>\r\n          <Col md={4}>\r\n            <Card>\r\n              <ListGroup variant=\"flush\">\r\n                <ListGroup.Item>\r\n                  <h2>Order Summary</h2>\r\n                </ListGroup.Item>\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Shipping</Col>\r\n                    <Col>{order.shippingPrice} DH</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n\r\n                <ListGroup.Item>\r\n                  <Row>\r\n                    <Col>Total</Col>\r\n                    <Col>{order.totalPrice} DH</Col>\r\n                  </Row>\r\n                </ListGroup.Item>\r\n              </ListGroup>\r\n            </Card>\r\n          </Col>\r\n        </Row>\r\n      </Card.Body>\r\n    </Card>\r\n  )\r\n}\r\n\r\nexport default OrderScreen\r\n","C:\\Programming\\MERN\\Food-Delivery-App\\frontend\\src\\screens\\UsersListScreen.js",["172","173","174","175","176","177","178"],{"ruleId":"179","replacedBy":"180"},{"ruleId":"181","replacedBy":"182"},{"ruleId":"183","severity":1,"message":"184","line":4,"column":10,"nodeType":"185","messageId":"186","endLine":4,"endColumn":14},{"ruleId":"183","severity":1,"message":"184","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":14},{"ruleId":"183","severity":1,"message":"187","line":3,"column":40,"nodeType":"185","messageId":"186","endLine":3,"endColumn":45},{"ruleId":"188","severity":1,"message":"189","line":17,"column":6,"nodeType":"190","endLine":17,"endColumn":16,"suggestions":"191"},{"ruleId":"183","severity":1,"message":"192","line":3,"column":44,"nodeType":"185","messageId":"186","endLine":3,"endColumn":50},{"ruleId":"188","severity":1,"message":"193","line":27,"column":6,"nodeType":"190","endLine":27,"endColumn":8,"suggestions":"194"},{"ruleId":"183","severity":1,"message":"195","line":1,"column":17,"nodeType":"185","messageId":"186","endLine":1,"endColumn":25},{"ruleId":"183","severity":1,"message":"196","line":3,"column":10,"nodeType":"185","messageId":"186","endLine":3,"endColumn":19},{"ruleId":"183","severity":1,"message":"197","line":3,"column":21,"nodeType":"185","messageId":"186","endLine":3,"endColumn":24},{"ruleId":"183","severity":1,"message":"198","line":3,"column":26,"nodeType":"185","messageId":"186","endLine":3,"endColumn":29},{"ruleId":"183","severity":1,"message":"199","line":3,"column":31,"nodeType":"185","messageId":"186","endLine":3,"endColumn":35},{"ruleId":"183","severity":1,"message":"200","line":3,"column":37,"nodeType":"185","messageId":"186","endLine":3,"endColumn":41},{"ruleId":"188","severity":1,"message":"201","line":16,"column":6,"nodeType":"190","endLine":16,"endColumn":8,"suggestions":"202"},"no-native-reassign",["203"],"no-negated-in-lhs",["204"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'Alert' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'orders'. Either include it or remove the dependency array.","ArrayExpression",["205"],"'Button' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'history', 'orderId', and 'userInfo'. Either include them or remove the dependency array.",["206"],"'useState' is defined but never used.","'Container' is defined but never used.","'Row' is defined but never used.","'Col' is defined but never used.","'Card' is defined but never used.","'Form' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["207"],"no-global-assign","no-unsafe-negation",{"desc":"208","fix":"209"},{"desc":"210","fix":"211"},{"desc":"212","fix":"213"},"Update the dependencies array to be: [dispatch, orders]",{"range":"214","text":"215"},"Update the dependencies array to be: [dispatch, history, orderId, userInfo]",{"range":"216","text":"217"},"Update the dependencies array to be: [dispatch]",{"range":"218","text":"219"},[554,564],"[dispatch, orders]",[824,826],"[dispatch, history, orderId, userInfo]",[586,588],"[dispatch]"]